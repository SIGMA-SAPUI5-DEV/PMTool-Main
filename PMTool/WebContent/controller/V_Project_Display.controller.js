sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/core/routing/History",
	"sap/m/MessageBox"
], function(Controller, History, MessageBox) {
	"use strict";

	return Controller.extend("PMTool.controller.V_Project_Display", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf PMTool.view.V_Project_Display
		 */
		onInit: function() {
			var oView = this.getView();
			var oTable = oView.byId("Proj_Table");
			var oModel = new sap.ui.model.odata.ODataModel("/sap/opu/odata/sap/ZTECH_TRACKER_SRV");
			var oBinding = oModel.bindList("/ProjMasterSet");
			var aLength = oBinding.getLength();
			oTable.setVisibleRowCount(aLength);
			},
			
			rebindTable: function(){
			this.oTable.bindRows({
			path: "/ProjMasterSet",
			Key: ["ZprojId"]
			});
			},

		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf PMTool.view.V_Project_Display
		 */
		onExit: function() {
	            	this.aProjMasterSet = [];
			},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf PMTool.view.V_Project_Display
		 */
		fGoToProj_1: function() {
			//This code was generated by the layout editor.
			//This code was generated by the layout editor.
			var oTable = this.getView().byId("Proj_Table");
			oTable.clearSelection();
			var oHistory = History.getInstance();
			var sPreviousHash = oHistory.getPreviousHash();
			// Go one screen back if you find a Hash
			if (sPreviousHash !== undefined) {
				window.history.go(-1);
			} // If you do not find a correct Hash, go to the Source screen using default router;
			else {
				var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
				oRouter.navTo("", true);
			}
		},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf PMTool.view.V_Project_Display
		 */
		fGoToProjCreate: function() {
			//This code was generated by the layout editor.
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			// Tell the Router to Navigate To Route_Tar_1
			oRouter.navTo("Route_Proj_Create", {});
		},

	fChangeProj: function() {
			var oView = this.getView();
			var oTable = oView.byId("Proj_Table");
			var aIndex = oTable.getSelectedIndex();
			var oDialog = oView.byId("idProjectDialogChange");
			// create dialog lazily
			if (!oDialog) {
				// create dialog via fragment factory
				oDialog = sap.ui.xmlfragment(oView.getId(), "PMTool.view.ProjectChange", this);
				// connect dialog to view (models, lifecycle)
				oView.addDependent(oDialog);
			}
 
			oDialog.open();
			var oContext = oTable.getContextByIndex(aIndex);
			var iZprojId = oContext.getProperty("ZprojId");
			var sZprDesc =  oContext.getProperty("ZprDesc");
			var dZprStdate = oContext.getProperty("ZprStdate");
			var dZprEndate = oContext.getProperty("ZprEndate");
			oView.byId("inProjId").setText(iZprojId);
			oView.byId("inProjDesc").setValue(sZprDesc);
			var dateFormat = sap.ui.core.format.DateFormat.getDateInstance({pattern : "dd-MM-yyyy" });   
			var dateFormatted = dateFormat.format(dZprStdate);
			oView.byId("inProjStDate").setValue(dateFormatted);
			dateFormatted = dateFormat.format(dZprEndate);
			oView.byId("inProjEnDate").setValue(dateFormatted);
			
		},
		
			onCloseSaveDialog: function () {

			this.getView().byId("idProjectDialogChange").close();
			this.getView().byId("idProjectDialogChange").destroy();	
			var oTable = this.getView().byId("Proj_Table");
			oTable.clearSelection();

			},
		
		
	fSaveChangeProject: function () {
			var oView = this.getView();
			var oTable = this.getView().byId("Proj_Table");
			 var aIndex = oTable.getSelectedIndex();
			var contexts = oTable.getContextByIndex(aIndex);
			var set = contexts.sPath;
				
			/*create operation*/
			var oModel = this.getView().getModel();
			var oEntry = {};
			oEntry.ZprojId   = oView.byId("inProjId").getText();
            oEntry.ZprDesc   = oView.byId("inProjDesc").getValue();
            var sDate = oView.byId("inProjStDate").getValue();
            oEntry.ZprStdate = this.fFormatDate(sDate);
            sDate = oView.byId("inProjEnDate").getValue();
             oEntry.ZprEndate = this.fFormatDate(sDate);
            if(oEntry.ZprStdate > oEntry.ZprEndate){
				this.getView().byId("inProjEnDate").setTooltip("Project End date cannot be less than Project Start Date");
				this.getView().byId("inProjEnDate").setValueState(sap.ui.core.ValueState.Error);
            }
            else{ 
            	this.getView().byId("inProjEnDate").setValueState(sap.ui.core.ValueState.None);

			oModel.update(set, oEntry, {
				method: "PUT",
				success: function(data) {
					MessageBox.success("Project has been updated");
				},
				error: function(e) {
					MessageBox.error("Error in update");
				}
			});

			this.getView().byId("idProjectDialogChange").close();
			this.getView().byId("idProjectDialogChange").destroy();			
			oTable.clearSelection();
            }
		},
		fFormatDate:function(inDate){ 
			var sDay = inDate.substr(0, 2);
			var sMonth = inDate.substr(3, 2);
			var sYear = inDate.substr(6);
			return sYear + "-" + sMonth + "-" + sDay + "T00:00:00";
			
			
		},	
			/**
		 *@memberOf PMTool.controller.V_Dev_Display
		 */
		fDeleteProjEntry: function()
		{
	         var oModel = this.getView().getModel();
	         var oTable = this.getView().byId("Proj_Table");
			 var aIndex = oTable.getSelectedIndex();
			 var contexts = oTable.getContextByIndex(aIndex);
			MessageBox.confirm("Do you want to delete?", {onClose:function(oAction){
			if(oAction === sap.m.MessageBox.Action.OK){
		 var set = contexts.sPath;
		 oModel.remove(set, {
        method: "DELETE",
       success: function(data) {
            MessageBox.success("Project has been deleted");
        },
         error: function(e) {
              MessageBox.error("Error in deletion");
  }
 });		
			} 
			
		}});	
			
		}
		
	});
});